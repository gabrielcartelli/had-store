basePath: /
definitions:
  handlers.HatPedido:
    properties:
      id:
        type: integer
      nome:
        type: string
      preco:
        type: number
      quantidade:
        type: integer
    type: object
  handlers.Pedido:
    properties:
      cpf:
        type: string
      email:
        type: string
      itens:
        items:
          $ref: '#/definitions/handlers.HatPedido'
        type: array
      nome:
        type: string
      pagamento:
        type: string
      total:
        type: number
    type: object
  models.Hat:
    properties:
      id:
        type: integer
      nome:
        type: string
      price:
        type: number
      quantidade:
        type: integer
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
      rememberMe:
        type: boolean
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API da loja de chapéus Hat Store.
  title: Hat Store API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Loga um usuário com email e senha e retorna um token JWT
      parameters:
      - description: Credenciais de Login
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Token JWT
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Requisição inválida
          schema:
            type: string
        "401":
          description: Email ou senha inválidos
          schema:
            type: string
        "429":
          description: Muitas tentativas de login
          schema:
            type: string
      summary: Autentica um usuário
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Cria uma nova conta de usuário com email e senha
      parameters:
      - description: Credenciais de Registro
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Usuário criado com sucesso!
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Requisição inválida
          schema:
            type: string
        "409":
          description: Usuário já existe
          schema:
            type: string
      summary: Registra um novo usuário
      tags:
      - auth
  /cart/add:
    post:
      consumes:
      - application/json
      description: Adiciona um chapéu ao carrinho do usuário
      parameters:
      - description: Item do carrinho
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/models.Hat'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Adiciona um chapéu ao carrinho
      tags:
      - cart
  /cart/update:
    put:
      consumes:
      - application/json
      description: Atualiza a quantidade de um item no carrinho
      parameters:
      - description: Item do carrinho
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/models.Hat'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Atualiza o carrinho
      tags:
      - cart
  /checkout:
    post:
      consumes:
      - application/json
      description: Finaliza o pedido do usuário
      parameters:
      - description: Dados do pedido
        in: body
        name: pedido
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Finaliza o pedido
      tags:
      - checkout
  /hats:
    get:
      description: Retorna a lista de chapéus disponíveis
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Hat'
            type: array
      summary: Lista todos os chapéus
      tags:
      - hats
  /pedido:
    post:
      consumes:
      - application/json
      description: Registra os dados do pedido em memória
      parameters:
      - description: Dados do pedido
        in: body
        name: pedido
        required: true
        schema:
          $ref: '#/definitions/handlers.Pedido'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Registra um pedido
      tags:
      - pedido
swagger: "2.0"
