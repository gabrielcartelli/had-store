// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Loga um usuário com email e senha e retorna um token JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Autentica um usuário",
                "parameters": [
                    {
                        "description": "Credenciais de Login",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token JWT",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Requisição inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Email ou senha inválidos",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "429": {
                        "description": "Muitas tentativas de login",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Cria uma nova conta de usuário com email e senha",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Registra um novo usuário",
                "parameters": [
                    {
                        "description": "Credenciais de Registro",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Usuário criado com sucesso!",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Requisição inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Usuário já existe",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cart/add": {
            "post": {
                "description": "Adiciona um chapéu ao carrinho do usuário",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cart"
                ],
                "summary": "Adiciona um chapéu ao carrinho",
                "parameters": [
                    {
                        "description": "Item do carrinho",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Hat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/cart/update": {
            "put": {
                "description": "Atualiza a quantidade de um item no carrinho",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cart"
                ],
                "summary": "Atualiza o carrinho",
                "parameters": [
                    {
                        "description": "Item do carrinho",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Hat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/checkout": {
            "post": {
                "description": "Finaliza o pedido do usuário",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "checkout"
                ],
                "summary": "Finaliza o pedido",
                "parameters": [
                    {
                        "description": "Dados do pedido",
                        "name": "pedido",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/hats": {
            "get": {
                "description": "Retorna a lista de chapéus disponíveis",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hats"
                ],
                "summary": "Lista todos os chapéus",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Hat"
                            }
                        }
                    }
                }
            }
        },
        "/pedido": {
            "post": {
                "description": "Registra os dados do pedido em memória",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedido"
                ],
                "summary": "Registra um pedido",
                "parameters": [
                    {
                        "description": "Dados do pedido",
                        "name": "pedido",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.Pedido"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.HatPedido": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "preco": {
                    "type": "number"
                },
                "quantidade": {
                    "type": "integer"
                }
            }
        },
        "handlers.Pedido": {
            "type": "object",
            "properties": {
                "cpf": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "itens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.HatPedido"
                    }
                },
                "nome": {
                    "type": "string"
                },
                "pagamento": {
                    "type": "string"
                },
                "total": {
                    "type": "number"
                }
            }
        },
        "models.Hat": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantidade": {
                    "type": "integer"
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "rememberMe": {
                    "type": "boolean"
                }
            }
        },
        "models.RegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Had Store API",
	Description:      "API da loja de chapéus Had Store.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
